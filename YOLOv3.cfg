[net]
# The number of subdivisions for the training batch. Should be a multiple of 2.
subdivisions = 16

# The batch size for training. Should be a multiple of subdivisions.
batch = 64

# The number of iterations for training.
max_batches = 4000

# The base learning rate for the network.
learning_rate = 0.001

# The steps at which to adjust the learning rate. Comma-separated.
steps = 3200, 3600

# The scale factor for adjusting the learning rate.
scales = 0.1, 0.1

# The width and height of the input image.
width = 416
height = 416

# The number of channels in the input image (usually 3 for RGB).
channels = 3

# The number of classes you are training the model to detect.
classes = 80

# The type of YOLOv3 architecture to use (either "yolov3" or "yolov3-tiny").
# You can also specify "yolov3-spp" or other variants.
type = yolov3

# The path to the pretrained weights file (optional).
# pretrained = path/to/pretrained/weights

# The path where the final trained weights will be saved.
# backup = backup/

[convolutional]
# The number of filters in the convolutional layer.
filters = 32

# The size of the convolutional kernel.
size = 3

# The stride of the convolutional layer.
stride = 1

# The padding for the convolutional layer.
pad = 1

# The activation function for the layer (either "leaky" or "linear").
activation = leaky

# The batch normalization option for the layer (1 for yes, 0 for no).
batch_normalize = 1

[shortcut]
# The index of the previous layer to use as a shortcut connection.
from=-3

[route]
# The index of the previous layer(s) to route to the current layer.
layers = -4

[yolo]
# The mask for the anchors (usually 0,1,2 for yolov3).
mask = 0,1,2

# The number of anchors.
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326

# The anchor step (width and height of anchors relative to the input size).
classes = 80
ignore_thresh = .5
truth_thresh = 1
random = 1
